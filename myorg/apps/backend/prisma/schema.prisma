generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                 @id @default(autoincrement())
  username              String              @unique
  email                 String              
  password              String
  phone                 String?
  profile_image         String?
  role_id               Int                 @map("role_id")
  areas_operator_id     Int?

  role                  Role                @relation(fields: [role_id], references: [id])
  areasOperator         AreasOperator?      @relation(fields: [areas_operator_id], references: [id])
  WorkOrders            WorkOrder[]         @relation("UserWorkOrders")
  WorkOrdersClosed      WorkOrder[]         @relation("UserWorkOrdersClosed")
  WorkOrderFlow         WorkOrderFlow[]     @relation("UserWorkOrderFlow")
  areasResponses        AreasResponse[]     @relation("UserAssignedToResponse")
  answers               FormAnswer[]        @relation("AnsweredBy")
  reviewedAnswers       FormAnswer[]        @relation("ReviewedBy")
  formAuditory          FormAuditory[]      @relation("UserAssignedToFormAuditory")
  inconformitiesCreated Inconformities[]    @relation("UserInconformities")
  biometricKeys         UserBiometricKey[]  
  partialReleases   PartialRelease[]   @relation("UserPartialReleases")

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("users")
}

model UserBiometricKey {
  id        Int     @id @default(autoincrement())
  userId    Int
  alias     String?
  publicKey String @db.Text

  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, alias])
}

model Role {
  id                    Int                 @id @default(autoincrement())
  name                  String              @unique

  users                 User[]              // Relación inversa con User
  permissions           ModulePermission[]  // Relación inversa con ModulePermission
  questions             FormQuestion[]

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("roles")
}

model AreasOperator {
  id                    Int                 @id @default(autoincrement())
  name                  String              @unique

  users                 User[]              //Relacion con User si aplica 
  workOrderFlows        WorkOrderFlow[]     //Relacion con flujo de OTs
  areasResponses        AreasResponse[]     @relation("AreaOnResponse")
  formQuestions         FormQuestion[]      @relation("QuestionsOnAreas")
  answers               FormAnswer[]

  @@map("areas_operator")
}

model Module {
  id                    Int                 @id @default(autoincrement())
  name                  String              @unique
  description           String              //Nombre del modulo permitido
  imageName             String              
  logoName              String              
  
  permissions           ModulePermission[]  // Relacion con permisos 

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("modules")
}

model ModulePermission {
  id                    Int                 @id @default(autoincrement())
  role_id               Int                 
  module_id             Int                 //Nombre del modulo permitido
  enabled               Boolean             @default(true) //para activar o desactivar el modulo por rol
  
  role                  Role                @relation(fields: [role_id], references: [id], onDelete: Cascade)
  module                Module              @relation(fields: [module_id], references: [id], onDelete: Cascade)

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@unique([module_id, role_id])      //Para no tener un mismo rol con permisos duplicados
  @@map("module_permissions")
}

model WorkOrder {
  id                    Int                 @id @default(autoincrement())
  ot_id                 String              @unique
  mycard_id             String
  quantity              Int                 // Estado general de la OT
  created_by            Int                 // Usuario que creó la OT
  comments              String?
  closed_by             Int?                // Usuario que cerró la OT
  status                String?
  priority              Boolean             @default(false)
  
  user                  User                @relation("UserWorkOrders", fields: [created_by], references: [id])
  user_closed           User?               @relation("UserWorkOrdersClosed", fields: [closed_by], references: [id])
  files                 WorkOrderFiles[]    // Relacion con archivos
  flow                  WorkOrderFlow[]     // Relación con las áreas por las que ha pasado
  areasResponses        AreasResponse[]     @relation("WorkOrderOnResponse")
  formAnswers           FormAnswer[]        @relation("WorkOrderToFormAnswers")

  createdAt             DateTime            @default(now()) @map("created_at")
  updatedAt             DateTime            @updatedAt @map("updated_at")

  @@map("work_orders")
}

model WorkOrderFiles {
  id                    Int                 @id @default(autoincrement())
  work_order_id         Int                 // Clave foránea de la OT
  type                  String              // Tipo de archivo (OT, SKU, OP)
  file_path             String              // Ruta del archivo

  workOrder             WorkOrder           @relation(fields: [work_order_id], references: [id])

  created_at            DateTime            @default(now()) @map("created_at")
  updated_at            DateTime            @updatedAt @map("updated_at")

  @@map("work_order_files")
}

model WorkOrderFlow {
  id                     Int                 @id @default(autoincrement())
  work_order_id          Int                 // ID de la OT
  area_id                Int                 // Área por la que pasa la OT
  status                 String              // Estado dentro de esa área ("En espera", "Pendiente", "En Proceso", "En calidad", "Listo", "Completado", "En inconformidad")
  assigned_user          Int?                // Usuario asignado
  assigned_at            DateTime?           @map("assigned_at") // Cuándo fue asignada a esta área
  area_response_id       Int?                // Clave foránea

  user                   User?               @relation("UserWorkOrderFlow", fields: [assigned_user], references: [id])
  workOrder              WorkOrder           @relation(fields: [work_order_id], references: [id], onDelete: Cascade)
  area                   AreasOperator       @relation(fields: [area_id], references: [id], onDelete: Cascade)
  areaResponse           AreasResponse?      @relation("ResponseOnWorkOrderFlow")
  answers                FormAnswer[]
  partialReleases        PartialRelease[]
  formAuditory           FormAuditory[]

  created_at             DateTime            @default(now()) @map("created_at")
  updated_at             DateTime            @updatedAt @map("updated_at")

  @@map("work_order_flows")
}

model PartialRelease {
  id                     Int                     @id @default(autoincrement())
  user_id                Int?
  work_order_flow_id     Int                     
  quantity               Int
  positives              Int?
  test_type              String?
  bad_quantity           Int?               
  excess_quantity        Int?

  observation            String?
  validated              Boolean             @default(false)
  form_auditory_id       Int?
  created_at             DateTime            @default(now()) @map("created_at")

  user                   User?               @relation("UserPartialReleases", fields: [user_id], references: [id])
  inconformities         Inconformities[]         // Relacion inversa
  WorkOrderFlow          WorkOrderFlow       @relation(fields: [work_order_flow_id], references: [id], onDelete: Cascade)
}

model AreasResponse {
  id                     Int                      @id @default(autoincrement())
  area_id                Int                      // Area del usuario que pasa la respuesta
  assigned_user          Int?                     // Usuario asignado
  work_order_id          Int                      // Id de la OT 
  work_order_flow_id     Int                      @unique                

  user                   User?                    @relation("UserAssignedToResponse", fields: [assigned_user], references: [id])
  area                   AreasOperator            @relation("AreaOnResponse", fields: [area_id], references: [id], onDelete: Cascade)
  workOrder              WorkOrder                @relation("WorkOrderOnResponse", fields: [work_order_id], references: [id], onDelete: Cascade)
  WorkOrderFlow          WorkOrderFlow            @relation("ResponseOnWorkOrderFlow", fields: [work_order_flow_id], references: [id])
  inconformities         Inconformities[]         // Relacion inversa

  prepress               PrepressResponse?        @relation("PrepressOnResponse")
  impression             ImpressionResponse?      @relation("ImpressionOnResponse")
  serigrafia             SerigrafiaResponse?      @relation("SerigrafiaOnResponse")
  empalme                EmpalmeResponse?         @relation("EmpalmeOnResponse")
  laminacion             LaminacionResponse?      @relation("LaminacionOnResponse")
  corte                  CorteResponse?           @relation("CorteOnResponse")
  colorEdge              ColorEdgeResponse?       @relation("ColorEdgeOnResponse")
  hotStamping            HotStampingResponse?     @relation("HotStampingOnResponse")
  millingChip            MillingChipResponse?     @relation("MillingChipOnResponse")
  personalizacion        PersonalizacionResponse? @relation("PersonalizacionOnResponse")

  createdAt              DateTime                 @default(now()) @map("created_at")
  updatedAt              DateTime                 @updatedAt @map("updated_at")

  @@map("areas_response")
}

model PrepressResponse {
  id                     Int                      @id @default(autoincrement())
  plates                 Int                      // Placas
  positives              Int                      // Positivos
  testType               String                   // Tipo de prueba: "color" | "fisica" | "digital"
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int?                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer?               @relation("AnswerOnPrepress", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("PrepressOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)

  @@map("prepress_response")
}

model ImpressionResponse {
  id                     Int                      @id @default(autoincrement())
  release_quantity       Int                      // Cantidad a liberar
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnImpression", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("ImpressionOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)

  @@map("impression_response")
}

model SerigrafiaResponse {
  id                     Int                      @id @default(autoincrement())
  release_quantity       Int                      // Cantidad a liberar
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnSerigrafia", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("SerigrafiaOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)

  @@map("serigrafia_response")
}

model EmpalmeResponse {
  id                     Int                      @id @default(autoincrement())
  release_quantity       Int                      // Cantidad a liberar
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnEmpalme", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("EmpalmeOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)

  @@map("empalme_response")
}

model LaminacionResponse {
  id                     Int                      @id @default(autoincrement())
  release_quantity       Int                      // Cantidad a liberar
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnLaminacion", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("LaminacionOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)

  @@map("laminacion_response")
}

model CorteResponse {
  id                     Int                      @id @default(autoincrement())
  good_quantity          Int      
  bad_quantity           Int      
  excess_quantity        Int      
  
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnCorte", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("CorteOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)
  form_auditory_id       Int                      @unique //Respuesta del auditor
  formAuditory           FormAuditory?            @relation("CorteToFormAuditory", fields: [form_auditory_id], references: [id], onDelete: Cascade)

  @@map("corte_response")
}

model ColorEdgeResponse {
  id                     Int                      @id @default(autoincrement())
  good_quantity          Int      
  bad_quantity           Int      
  excess_quantity        Int      
  
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnColorEdge", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("ColorEdgeOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)
  form_auditory_id       Int                      @unique
  formAuditory           FormAuditory?            @relation("ColorEdgeToFormAuditory", fields: [form_auditory_id], references: [id], onDelete: Cascade)

  @@map("color_edge_response")
}

model HotStampingResponse {
  id                     Int                      @id @default(autoincrement())
  good_quantity          Int      
  bad_quantity           Int      
  excess_quantity        Int      
  
  comments               String?                  // Comentarios opcionales

  created_at             DateTime                 @default(now()) @map("created_at")
  updated_at             DateTime                 @updatedAt @map("updated_at")

  form_answer_id         Int                      @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer               @relation("AnswerOnHotStamping", fields: [form_answer_id], references: [id])
  areas_response_id      Int                      @unique
  areas_response         AreasResponse            @relation("HotStampingOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)
  form_auditory_id       Int                      @unique
  formAuditory           FormAuditory?            @relation("HotStampingToFormAuditory", fields: [form_auditory_id], references: [id], onDelete: Cascade)

  @@map("hot_stamping_response")
}

model MillingChipResponse {
  id                     Int                       @id @default(autoincrement())
  good_quantity          Int      
  bad_quantity           Int      
  excess_quantity        Int      
  
  comments               String?                    // Comentarios opcionales

  created_at             DateTime                   @default(now()) @map("created_at")
  updated_at             DateTime                   @updatedAt @map("updated_at")

  form_answer_id         Int                        @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer                 @relation("AnswerOnMillingChip", fields: [form_answer_id], references: [id])
  areas_response_id      Int                        @unique
  areas_response         AreasResponse              @relation("MillingChipOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)
  form_auditory_id       Int                        @unique
  formAuditory           FormAuditory?              @relation("MillingChipToFormAuditory", fields: [form_auditory_id], references: [id], onDelete: Cascade)

  @@map("milling_chip_response")
}

model PersonalizacionResponse {
  id                     Int                         @id @default(autoincrement())
  good_quantity          Int      
  bad_quantity           Int      
  excess_quantity        Int      
  
  comments               String?                      // Comentarios opcionales

  created_at             DateTime                     @default(now()) @map("created_at")
  updated_at             DateTime                     @updatedAt @map("updated_at")

  form_answer_id         Int                          @unique // Respuesta de CQM aprobada
  form_answer            FormAnswer                   @relation("AnswerOnPersonalizacion", fields: [form_answer_id], references: [id])
  areas_response_id      Int                          @unique
  areas_response         AreasResponse                @relation("PersonalizacionOnResponse", fields: [areas_response_id], references: [id], onDelete: Cascade)
  form_auditory_id       Int                          @unique
  formAuditory           FormAuditory?                @relation("PersonalizacionToFormAuditory", fields: [form_auditory_id], references: [id], onDelete: Cascade)

  @@map("personalizacion_response")
}

model FormAuditory {
  id                                Int                       @id @default(autoincrement())
  reviewed_by_id                    Int?                      //Usuario de Auditoria que revisó
  sample_auditory                   Int?                      //Usuario de Auditoria que revisó
  comments                          String? 

  corte_answer_auditory             CorteResponse?            @relation("CorteToFormAuditory")
  color_edge_answer_auditory        ColorEdgeResponse?        @relation("ColorEdgeToFormAuditory")
  hot_stamping_answer_auditory      HotStampingResponse?      @relation("HotStampingToFormAuditory")
  milling_chip_answer_auditory      MillingChipResponse?      @relation("MillingChipToFormAuditory")
  personalizacion_answer_auditory   PersonalizacionResponse?  @relation("PersonalizacionToFormAuditory")

  work_order_flow_id                Int?                      // NUEVO campo para relación
  workOrderFlow                     WorkOrderFlow?            @relation(fields: [work_order_flow_id], references: [id])

  user                              User?                     @relation("UserAssignedToFormAuditory", fields: [reviewed_by_id], references: [id])
  created_at                        DateTime                  @default(now()) @map("created_at")
  updated_at                        DateTime                  @updatedAt @map("updated_at")

  @@map("form_auditory")
}

model FormQuestion {
  id                     Int             @id @default(autoincrement())
  title                  String          // Ej: REVISAR PIOJOS Y VELO EN LA IMPRESIÓN
  key                    String          @unique
  role_id                Int?            // Para saber si es para el operador o para calidad
  
  areas                  AreasOperator[] @relation("QuestionsOnAreas")
  role                   Role?           @relation(fields: [role_id], references: [id])

  created_at             DateTime        @default(now())
  updated_at             DateTime        @updatedAt

  formAnswerResponses    FormAnswerResponse[]
  @@map("form_questions")
}

model FormAnswer {
  id                         Int                @id @default(autoincrement())
  work_order_id              Int?
  work_order_flow_id         Int       
  user_id                    Int
  area_id                    Int

  sample_quantity            Int?
  finish_validation          String?
  testtype_cqm               String?
  magnetic_band              String?
  track_type                 String?
  validar_inlays             String?
  color                      String?
  holographic_type           String?
  color_edge                 String?            //Para respuesta operador Color Edge a CQM
  color_foil                 String?            //Para respuesta operador Hot Stamping a CQM
  revisar_posicion           String?            //Para respuesta operador Hot Stamping a CQM
  imagen_holograma           String?            //Para respuesta operador Hot Stamping a CQM
  revisar_tecnologia         String?            //Para respuesta operador Milling Chip a CQM
  validar_kvc                String?            //Para respuesta operador Milling Chip a CQM
  localizacion_contactos     String?            //Para respuesta calidad Milling Chip a CQM
  altura_chip                String?            //Para respuesta calidad Milling Chip a CQM
  tipo_personalizacion       String?            //Para respuesta calidad Personalicion a CQM
  verificar_etiqueta         String?            //Para respuesta calidad Personalicion a CQM
  color_personalizacion      String?            //Para respuesta calidad Personalicion a CQM
  codigo_barras              String?            //Para respuesta calidad Personalicion a CQM
  verificar_script           String?            //Para respuesta calidad Personalicion a CQM
  validar_kvc_perso          String?            //Para respuesta calidad Personalicion a CQM
  carga_aplicacion           String?            //Para respuesta calidad Personalicion a CQM
  apariencia_quemado         String?            //Para respuesta calidad Personalicion a CQM

  reviewed                   Boolean
  accepted                   Boolean?
  reviewed_by_id             Int?               //Usuario de Calidad que revisó
  reviewer_assigned_at       DateTime?          @map("reviewer_assigned_at") // Cuándo fue asignada a esta área

  created_at                 DateTime           @default(now())
  updated_at                 DateTime           @updatedAt

  user                       User               @relation("AnsweredBy", fields: [user_id], references: [id])
  area                       AreasOperator      @relation(fields: [area_id], references: [id])
  reviewer                   User?              @relation("ReviewedBy", fields: [reviewed_by_id], references: [id])
  inconformities             Inconformities[]         // Relacion inversa
  workOrder                  WorkOrder?         @relation("WorkOrderToFormAnswers", fields: [work_order_id], references: [id], onDelete: Cascade)
  workOrderFlow              WorkOrderFlow      @relation(fields: [work_order_flow_id], references: [id])

  prepressResponse           PrepressResponse?           @relation("AnswerOnPrepress")
  impressionResponse         ImpressionResponse?         @relation("AnswerOnImpression")
  serigrafiaResponse         SerigrafiaResponse?         @relation("AnswerOnSerigrafia")
  empalmeResponse            EmpalmeResponse?            @relation("AnswerOnEmpalme")
  laminacionResponse         LaminacionResponse?         @relation("AnswerOnLaminacion")
  corteResponse              CorteResponse?              @relation("AnswerOnCorte")
  colorEdgeResponse          ColorEdgeResponse?          @relation("AnswerOnColorEdge")
  hotStampingResponse        HotStampingResponse?        @relation("AnswerOnHotStamping")
  millingChipResponse        MillingChipResponse?        @relation("AnswerOnMillingChip")
  personalizacionResponse    PersonalizacionResponse?    @relation("AnswerOnPersonalizacion")
  FormAnswerResponse         FormAnswerResponse[]

  @@map("form_answers")
}

model FormAnswerResponse {
  id                      Int           @id @default(autoincrement())
  form_answer_id          Int           // Relación con la tabla principal FormAnswer
  question_id             Int           // Relación con FormQuestion
  response_operator       Boolean       // Respuesta individual
  response_cqm            Boolean?

  formAnswer              FormAnswer    @relation(fields: [form_answer_id], references: [id])
  question                FormQuestion  @relation(fields: [question_id], references: [id])

  @@map("form_answers_response")
}

model Inconformities {
  id                      Int               @id @default(autoincrement())
  areas_response_id       Int?              // Relación con la tabla principal FormAnswer
  form_answer_id          Int?
  partial_release_id      Int?      
  comments                String            // Relación con FormQuestion
  created_by              Int?              // Respuesta individual

  partialReleases         PartialRelease?    @relation(fields: [partial_release_id], references: [id], onDelete: Cascade)
  areaResponse            AreasResponse?     @relation(fields: [areas_response_id], references: [id], onDelete: Cascade)
  formAnswer              FormAnswer?        @relation(fields: [form_answer_id], references: [id], onDelete: Cascade)
  user                    User?             @relation("UserInconformities", fields: [created_by], references: [id])
  
  created_at             DateTime           @default(now())

  @@map("inconformities")
}